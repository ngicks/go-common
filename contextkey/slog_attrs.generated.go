// Code generated by github.com/ngicks/go-common/contextkey/generate DO NOT EDIT
package contextkey

import (
	"context"
	"log/slog"
)

var (
	KeySlogAttrs = keyTypeFunc("[]slog.Attr")
)

// WithSlogAttrs returns a copy of parent in which the value associated with KeySlogAttrs is v.
// v associated with contexts for KeySlogAttrs can later be retrieved by any of Value method,
// ValueSlogAttrs, ValueSlogAttrsFallback or ValueSlogAttrsDefault.
func WithSlogAttrs(ctx context.Context, v []slog.Attr) context.Context {
	return context.WithValue(ctx, KeySlogAttrs, v)
}

// ValueSlogAttrs returns []slog.Attr associated with ctx for KeySlogAttrs.
// ok is false if the value was not associated or other than []slog.Attr.
func ValueSlogAttrs(ctx context.Context) (v []slog.Attr, ok bool) {
	val := ctx.Value(KeySlogAttrs)
	if v, ok := val.([]slog.Attr); ok {
		return v, true
	}
	var zero []slog.Attr
	return zero, false
}

// ValueSlogAttrsFallback returns []slog.Attr associated with ctx for KeySlogAttrs,
// or in case the value was not associated to ctx, returns fallback.
func ValueSlogAttrsFallback(ctx context.Context, fallback []slog.Attr) []slog.Attr {
	v, ok := ValueSlogAttrs(ctx)
	if ok {
		return v
	}
	return fallback
}

// ValueSlogAttrsFallbackFn returns []slog.Attr associated with ctx for KeySlogAttrs,
// or in case the value was not associated to ctx, returns calling result of fallbackFn.
func ValueSlogAttrsFallbackFn(ctx context.Context, fallbackFn func() []slog.Attr) []slog.Attr {
	v, ok := ValueSlogAttrs(ctx)
	if ok {
		return v
	}
	return fallbackFn()
}

// ValueSlogAttrsDefault returns []slog.Attr associated with ctx for KeySlogAttrs.
// In case the value was not associated, returns default value for the type.
//
// The default value is an evaluation result of []slog.Attr(nil).
func ValueSlogAttrsDefault(ctx context.Context) []slog.Attr {
	return ValueSlogAttrsFallbackFn(ctx, func () []slog.Attr { return []slog.Attr(nil) })
}
